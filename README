Buildroot is a simple, efficient and easy-to-use tool to generate embedded
Linux systems through cross-compilation.

The documentation can be found in docs/manual. You can generate a text
document with 'make manual-text' and read output/docs/manual/manual.text.
Online documentation can be found at http://buildroot.org/docs.html

To build and use the buildroot stuff, do the following:

1) run 'make menuconfig'
2) select the target architecture and the packages you wish to compile
3) run 'make'
4) wait while it compiles
5) find the kernel, bootloader, root filesystem, etc. in output/images

You do not need to be root to build or run buildroot.  Have fun!

Buildroot comes with a basic configuration for a number of boards. Run
'make list-defconfigs' to view the list of provided configurations.

Please feed suggestions, bug reports, insults, and bribes back to the
buildroot mailing list: buildroot@buildroot.org
You can also find us on #buildroot on Freenode IRC.

If you would like to contribute patches, please read
https://buildroot.org/manual.html#submitting-patches

How to create a rescue USB-Stick - Carefull not to wipe your SSD!!!
1) Format a USB stick with 'mkfs.vfat -F 32 -n "NLL_RESCUE" /dev/sdX'
   You can also perform 'wipefs --all /dev/sdX' to remove other file systems beforehand 
2) in your build directory run 'make bbb-console'
3) Edit 'nano /fs/nonlinux/nonlinear/fs-overlay-usbrescue/usr/bin/setup.sh' to peform the rescue steps
4) Execute 'make nonlinear_usbrescue_defconfig' and run 'make'
6) run './create_usb_stick.sh' which will create 'nonlinear.img' under /tmp
5) Copy you image to you formatted USB with 'cp /tmp/nonlinear.img /mnt/' if you mounted to /mnt. 
   (Docker will not mount you device automatically. No 'dd' needed to copy.)

This is not the final solution, but it works. Next step is to automate the steps with cmake.
USB formating and image deployment should probably be done outside of docker.
